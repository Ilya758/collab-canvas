services:
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    env_file:
      - ./.env
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: always
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  postgres:
    container_name: postgres
    image: postgres:15
    env_file:
      - ./.env
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: collab_rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    healthcheck:
      test: ['CMD', 'rabbitmq-diagnostics', 'ping']
      interval: 5s
      timeout: 15s
      retries: 3
  
  api-gateway:
    container_name: api-gateway
    build:
      context: .
      dockerfile: ./services/api-gateway/Dockerfile
    ports:
      - 3000:3000
      - 9229:9229
    env_file:
      - ./services/api-gateway/.env
    restart: unless-stopped
    volumes:
      - ./services/api-gateway:/app/services/api-gateway
      - ./proto:/app/proto
      - /app/services/api-gateway/node_modules
    depends_on:
      - auth-service
      - workspace-service

  auth-service:
    container_name: auth-service
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    ports:
      - 3001:3001
      - 50051:50051
    env_file:
      - ./services/auth-service/.env
    restart: unless-stopped
    volumes:
      - ./services/auth-service:/app/services/auth-service
      - ./proto:/app/proto
      - /app/services/auth-service/node_modules
    depends_on:
      - postgres
    command: sh -c "npx prisma migrate deploy && yarn start:dev"

  workspace-service:
    container_name: workspace-service
    build:
      context: .
      dockerfile: ./services/workspace-service/Dockerfile
    ports:
      - 3002:3002
      - 50052:50052
    env_file:
      - ./services/workspace-service/.env
    restart: unless-stopped
    volumes:
      - ./services/workspace-service:/app/services/workspace-service
      - ./proto:/app/proto
      - /app/services/workspace-service/node_modules
    depends_on:
      postgres:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    command: sh -c "npx prisma migrate deploy && yarn start:dev"

  realtime-service:
    container_name: realtime-service
    build:
      context: .
      dockerfile: ./services/realtime-service/Dockerfile
    ports:
      - 3003:3003
    env_file:
      - ./services/realtime-service/.env
    restart: unless-stopped
    volumes:
      - ./services/realtime-service:/app/services/realtime-service
      - ./proto:/app/proto
      - /app/services/realtime-service/node_modules
    depends_on:
      api-gateway:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    command: sh -c "yarn start:dev"

volumes:
  db-data:
  pgadmin-data:
  rabbitmq-data:
