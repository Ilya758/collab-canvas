// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  boards      Board[]
  author      User?    @relation("ProjectAuthor", fields: [authorId], references: [id], onDelete: SetNull)
  authorId    Int?
}

model Board {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  projectId Int
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Restrict)
  authorId  Int?
  author    User?    @relation("BoardAuthor", fields: [authorId], references: [id], onDelete: SetNull)

  @@unique([projectId, name])
  @@index([projectId])
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[] @relation("ProjectAuthor")
  boards    Board[]   @relation("BoardAuthor")
}

enum Role {
  ADMIN
  USER
}
